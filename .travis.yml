# We are using the iOS build system to create Mac OS X python builds
language: objective-c

os:
  - osx

cache:
  directories:
    - node_modules
    - app/node_modules
    - $HOME/.electron
    - pip
    - $HOME/.cache/our-brew

before_install:
  # OS extra info
  - export HOMEBREW_CACHE=$HOME/.cache/our-brew
  - uname -a
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # Update brew
  - brew update

  # Install node.js
  - brew install nvm
  - mkdir -p ~/.nvm && export NVM_DIR=~/.nvm && source $(brew --prefix nvm)/nvm.sh && nvm alias default 6.0.0
  - echo "$(brew --prefix nvm)/nvm.sh" >> ~/.bashrc
  - nvm install 6.0.0
  - nvm use 6.0.0
  - node --version
  - npm --version
  - npm install

  - brew install python3
  - python3 --version
  - python3 -c "import struct; print(struct.calcsize('P') * 8)"
  - python --version
  - echo $PATH

  # Install Python packages (built with Python 3)
  - pip3 install pyinstaller
  - pyinstaller --version
  - pip3 install -r requirements.txt
  - cd server && nose -s --logging-level WARNING && cd ..

install:
  - node --version
  - npm --version
  - npm install && cd app && npm install && cd ..  # Hack until instapp-app-deps works on travis
  - npm run unit
  - npm run release:mac
  - ls dist/mac
  - ls releases

# Deploy the build version in an S3 bucket
deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  bucket: ot-app-builds
  skip_cleanup: true
  local-dir: releases
  upload-dir: mac
  acl: public_read
  on:
    repo: OpenTrons/opentrons-app
    all_branches: true

notifications:
  email:
    on_success: change
    on_failure: change
