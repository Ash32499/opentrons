============================= test session starts ==============================
platform darwin -- Python 3.5.3, pytest-3.1.3, py-1.4.34, pluggy-0.4.0 -- /Users/astaff/Development/opentrons/opentrons-api/api/.env/bin/python
cachedir: ../../.cache
rootdir: /Users/astaff/Development/opentrons/opentrons-api/api, inifile:
plugins: cov-2.5.1, pylama-7.4.1
collecting ... collected 2 items

tests/test_serialize.py::test_robot FAILED
tests/test_serialize.py::test_extract_references FAILED

=================================== FAILURES ===================================
__________________________________ test_robot __________________________________

    def test_robot():
        trough = containers.load('trough-12row', 'C1', 'trough')
        plate = containers.load('96-PCR-flat', 'D1', 'plate')
    
        # a tip rack for our pipette
        p200rack = containers.load('tiprack-200ul', 'B1', 'tiprack')
    
        # create a p200 pipette on robot axis B
        p200 = instruments.Pipette(
            name="p200",
            axis="b",
            min_volume=20,
            max_volume=200,
            tip_racks=[p200rack]
        )
    
>       tree, refs = serialize.get_object_tree(robot)

tests/test_serialize.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
serialize.py:35: in get_object_tree
    tree = _get_object_tree(obj, [], refs)
serialize.py:22: in _get_object_tree
    payload = { k: _get_object_tree(v, path) for k, v in obj.__dict__.items() }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <dict_itemiterator object at 0x10bdd6f48>

>   payload = { k: _get_object_tree(v, path) for k, v in obj.__dict__.items() }
E   TypeError: _get_object_tree() missing 1 required positional argument: 'refs'

serialize.py:22: TypeError
___________________________ test_extract_references ____________________________

    def test_extract_references():
        a1 = A(
                    {
                        'b': 1,
                        'c': 'c',
                        'd': True,
                        'e': None
                    })
        a2 = A({'a': 1})
        a3 = A({})
    
        root = A(
            {
                'a': a1,
                'b': [a2, 'b', 1],
                'c': {'a': 1, 'b': [1, 2, a3]},
            }
        )
        root.update({'circular': root})
    
>       tree, refs = serialize.get_object_tree(root)

tests/test_serialize.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
serialize.py:35: in get_object_tree
    tree = _get_object_tree(obj, [], refs)
serialize.py:22: in _get_object_tree
    payload = { k: _get_object_tree(v, path) for k, v in obj.__dict__.items() }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <dict_itemiterator object at 0x10c424638>

>   payload = { k: _get_object_tree(v, path) for k, v in obj.__dict__.items() }
E   TypeError: _get_object_tree() missing 1 required positional argument: 'refs'

serialize.py:22: TypeError
=========================== 2 failed in 0.61 seconds ===========================
